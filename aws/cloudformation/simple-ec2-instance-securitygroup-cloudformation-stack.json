{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"CloudFormation Template for CSYE 6225 - Fall 2017",
  "Parameters":{
    "ImageId":{
      "Type":"String"
    },
    "InstanceType":{
      "Type":"String"
    },
    "KeyName":{
      "Type":"String"
    },
    "SubnetId":{
      "Type":"String"
    },
    "GroupName":{
      "Type":"String"
    },
    "HostedZoneId":{
      "Type":"String"
    },
    "Name":{
      "Type":"String"
    },
    "VpcId":{
      "Type":"String"
    },
    "AllocatedStorage":{
      "Type":"String"
    },
    "DBInstanceClass":{
      "Type":"String"
    },
    "RDSGroupName":{
      "Type":"String"
    },
    "Engine":{
      "Type":"String"
    },
    "EngineVersion":{
      "Type":"String"
    },
    "DBInstanceIdentifier":{
      "Type":"String"
    },
    "DBUser":{
      "Type":"String"
    },
    "DBPassword":{
      "Type":"String"
    },
    "DBName":{
      "Type":"String"
    },
    "SubnetId2":{
      "Type":"String"
    },
    "TableName":{
      "Type":"String"
    },
    "PrimaryKeyName":{
      "Type":"String"
    },
    "S3BucketName":{
      "Type":"String"
    },
    "CodeDepEc2ServiceRole":{
      "Type":"String"
    },
    "CodeDepRole":{
      "Type":"String"
    },
    "TravisS3":{
      "Type":"String"
    },
    "CodeDepEC2S3":{
      "Type":"String"
    },
    "TravisCodeDep":{
      "Type":"String"
    }
  },
  "Resources":{
    "EC2Instance":{
      "Type":"AWS::EC2::Instance",
      "Properties":{
        "ImageId":{
          "Ref":"ImageId"
        },
        "InstanceType":{
          "Ref":"InstanceType"
        },

        "IamInstanceProfile" :{"Ref":  "CodeDeployServiceRoleInstanceProfile"},
        "SecurityGroupIds":[
          {
            "Fn::GetAtt":[
              "WebServerSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "sudo apt-get update\n",
          "sudo apt-get install openjdk-8-jdk -y\n",
          "sudo apt-get install tomcat8 -y\n",
          "sudo service tomcat8 start\n",
          "sudo apt-get update\n",
          "sudo apt-get install ruby -y\n",
          "sudo apt-get install wget\n",
          "cd /home/ubuntu\n",
          "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
          "chmod +x ./install\n",
          "sudo ./install auto\n",
          "sudo service codedeploy-agent start\n",
          "sudo service codedeploy-agent status\n",
          "echo '#!/bin/sh' >> /usr/share/tomcat8/bin/setenv.sh \n",
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://${RDSInstance.Endpoint.Address}:3306/csye6225\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=${DBUser}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=${DBPassword}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dbucket.name=${S3BucketName}\"' >> /usr/share/tomcat8/bin/setenv.sh\n"
          },
          "chmod +x /usr/share/tomcat8/bin/setenv.sh\n",
          "chown tomcat8:tomcat8 /usr/share/tomcat8/bin/setenv.sh\n",
          "chmod 777 -R /tmp\n",
          "chmod 777 /var/lib/tomcat8\n",
          "chmod 777 /var/lib/tomcat8/webapps"
        ]
        ]
        }
        },
        "KeyName":{
          "Ref":"KeyName"
        },
        "SubnetId":{
          "Ref":"SubnetId"
        },
        "BlockDeviceMappings":[
          {
            "DeviceName":"/dev/sdf",
            "Ebs":{
              "VolumeSize":"16",
              "VolumeType":"gp2"
            }
          }
        ],
        "Tags" :[
          {
            "Key" : "name",
            "Value" : "csye6225"
          }]
      }
    },
    "WebServerSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupName":{
          "Ref":"GroupName"
        },
        "GroupDescription":"Enable HTTP access via port 80, SSH access via port 22",
        "VpcId":{
          "Ref":"VpcId"
        },
        "SecurityGroupIngress":[
          {
            "IpProtocol":"tcp",
            "FromPort":"8080",
            "ToPort":"8080",
            "CidrIp":"0.0.0.0/0"
          },
          {
            "IpProtocol":"tcp",
            "FromPort":"22",
            "ToPort":"22",
            "CidrIp":"0.0.0.0/0"
          },
          {
            "IpProtocol":"tcp",
            "FromPort":"443",
            "ToPort":"443",
            "CidrIp":"0.0.0.0/0"
          },
          {
            "IpProtocol":"tcp",
            "FromPort":"3306",
            "ToPort":"3306",
            "CidrIp":"0.0.0.0/0"
          }
        ]
      }
    },
    "CreateTravisPolicyS3":{
      "Type":"AWS::IAM::ManagedPolicy",
      "Properties":{
        "Description":"test",
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Statement":[
            {
              "Effect":"Allow",
              "Action":[
                "s3:PutObject"
              ],
              "Resource":[
                "*"
              ]
            }
          ]
        },
        "Users":[
          "travis"
        ],
        "ManagedPolicyName":{"Ref" :"TravisS3"}
      }
    },

    "CreateCodeDeployEC2Ploicy":{
      "Type":"AWS::IAM::ManagedPolicy",
      "Properties":{
        "Description":"test2",
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Statement":[
            {
              "Action":[
                "s3:Get*",
                "s3:List*"
              ],
              "Effect":"Allow",
              "Resource":"*"
            }
          ]
        },

        "ManagedPolicyName":{"Ref":"CodeDepEC2S3"}
      }
    },
    "TravisCodeDeployPolicy":{
      "Type":"AWS::IAM::ManagedPolicy",
      "Properties":{
        "Description":"test2",
        "PolicyDocument":{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:RegisterApplicationRevision",
                "codedeploy:GetApplicationRevision"
              ],
              "Resource": [
                "arn:aws:codedeploy:us-east-1:748796322305:application:csye6225"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetDeployment"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:GetDeploymentConfig"
              ],
              "Resource": [
                "arn:aws:codedeploy:us-east-1:748796322305:deploymentconfig:CodeDeployDefault.OneAtATime",
                "arn:aws:codedeploy:us-east-1:748796322305:deploymentconfig:CodeDeployDefault.HalfAtATime",
                "arn:aws:codedeploy:us-east-1:748796322305:deploymentconfig:CodeDeployDefault.AllAtOnce"
              ]
            }
          ]
        },
        "Users":[
          "travis"
        ],
        "ManagedPolicyName":{"Ref":"TravisCodeDep"}
      }

    },
    "CodeDeployEC2ServiceRole": { "Type": "AWS::IAM::Role",
      "Properties":
      { "AssumeRolePolicyDocument":
      { "Version" : "2012-10-17",
        "Statement": [ { "Effect": "Allow",
          "Principal":
          { "Service": [ "ec2.amazonaws.com" ] },
          "Action": [ "sts:AssumeRole" ] } ] },
        "ManagedPolicyArns": [{"Ref": "CreateCodeDeployEC2Ploicy"},"arn:aws:iam::aws:policy/AmazonS3FullAccess","arn:aws:iam::aws:policy/AWSConnector"],
        "RoleName":{"Ref":"CodeDepEc2ServiceRole"} } },

    "CodeDeployServiceRole":{
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "codedeploy.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },

        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"],
        "RoleName": {"Ref" :"CodeDepRole"}
      }
    },

    "CodeDeployServiceRoleInstanceProfile":
    { "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "CodeDeployEC2ServiceRole" } ] } },
    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": {
          "Ref": "AllocatedStorage"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "Engine": {
          "Ref": "Engine"
        },
        "EngineVersion": {
          "Ref": "EngineVersion"
        },
        "MultiAZ": "false",
        "PubliclyAccessible" : "true",
        "DBInstanceIdentifier": {
          "Ref": "DBInstanceIdentifier"
        },
        "StorageType": "gp2",
        "MasterUsername": {
          "Ref": "DBUser"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "DBSubnetGroupName": {
          "Ref": "MyDBSubnetGroup"
        },
        "PubliclyAccessible": "false",
        "DBName": {
          "Ref": "DBName"
        },
        "VPCSecurityGroups": [{
          "Fn::GetAtt": ["RDSSecurityGroup", "GroupId"]
        }]
      }
    },
    "RDSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Open database for access",
        "GroupName": {
          "Ref": "RDSGroupName"
        },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "3306",
          "ToPort": "3306",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": ["WebServerSecurityGroup", "GroupId"]
          }
        }]
      }
    },
    "MyDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance",
        "SubnetIds": [{"Ref": "SubnetId"}, {"Ref": "SubnetId2"}]
      }
    },
    "MyDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": {"Ref": "TableName"},
        "AttributeDefinitions": [{
          "AttributeName": {
            "Ref": "PrimaryKeyName"
          },
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": {
            "Ref": "PrimaryKeyName"
          },
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        }
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {"Ref": "S3BucketName"}
      }
    },

    "ResourceRecords":{
      "Type":"AWS::Route53::RecordSet",
      "Properties":{
        "HostedZoneId":{
          "Ref":"HostedZoneId"
        },
        "Name":{
          "Ref":"Name"
        },
        "ResourceRecords":[
          {
            "Fn::GetAtt":[
              "EC2Instance",
              "PublicIp"
            ]
          }
        ],
        "TTL":"60",
        "Type":"A"
      }
    }
  }
}
